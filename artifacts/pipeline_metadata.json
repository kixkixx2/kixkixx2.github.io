{
  "pipeline_description": "Patient clustering using UMAP dimensionality reduction and KMeans clustering",
  "total_patients": 3000,
  "num_features": 19,
  "preprocessing": {
    "steps": [
      {
        "name": "Frequency Encoding",
        "description": "Categorical variables encoded using frequency encoding (value replaced by occurrence frequency)",
        "applied_to": [
          "gender",
          "ethnicity",
          "insurance_type",
          "smoking_status",
          "alcohol_consumption"
        ]
      },
      {
        "name": "Imputation",
        "description": "Missing values handled with SimpleImputer using median strategy"
      },
      {
        "name": "Scaling",
        "description": "StandardScaler applied to normalize all features",
        "formula": "z = (x - \u03bc) / \u03c3 where \u03bc is mean, \u03c3 is standard deviation"
      }
    ]
  },
  "dimensionality_reduction": {
    "algorithm": "UMAP",
    "full_name": "Uniform Manifold Approximation and Projection",
    "purpose": "Reduce high-dimensional feature space while preserving local and global structure",
    "parameters": {
      "n_neighbors": 45,
      "min_dist": 0.09444298503238986,
      "n_components": 10,
      "metric": "cosine",
      "random_state": 42
    },
    "theory": {
      "method": "Constructs high-dimensional graph representation using fuzzy simplicial set theory",
      "optimization": "Optimizes low-dimensional representation via cross-entropy minimization",
      "advantage": "Preserves topological structure better than linear methods like PCA"
    },
    "why_umap": [
      "Handles high-dimensional data better than PCA",
      "Faster than t-SNE for large datasets",
      "Better preservation of global structure",
      "Works well with cosine distance for medical features"
    ]
  },
  "clustering": {
    "algorithm": "KMeans",
    "n_clusters": 2,
    "description": "KMeans clustering applied on UMAP-reduced data",
    "kmeans_theory": {
      "initialization": "Initialize k centroids randomly",
      "assignment": "Assign each point to nearest centroid using Euclidean distance",
      "update": "Recalculate centroids as mean of assigned points",
      "convergence": "Repeat until centroids don't change",
      "objective_formula": "minimize \u03a3\u2c7c \u03a3\u1d62\u2208C\u2c7c ||x\u1d62 - \u03bc\u2c7c||\u00b2 where \u03bc\u2c7c is centroid of cluster j"
    }
  },
  "optimization": {
    "method": "Optuna (Bayesian Optimization with TPE Sampler)",
    "search_space": {
      "n_neighbors": [
        5,
        50
      ],
      "min_dist": [
        0.0,
        0.2
      ],
      "n_components": [
        2,
        3,
        5,
        8,
        10
      ],
      "metric": [
        "euclidean",
        "cosine",
        "manhattan"
      ],
      "n_clusters": [
        2,
        12
      ]
    },
    "optimization_metric": "Silhouette Score (maximize)",
    "n_trials": 50,
    "best_parameters": {
      "n_neighbors": 45,
      "min_dist": 0.09444298503238986,
      "n_components": 10,
      "metric": "cosine",
      "n_clusters": 2
    }
  },
  "evaluation_metrics": {
    "silhouette_score": {
      "value": 0.9192,
      "formula": "s(i) = (b(i) - a(i)) / max(a(i), b(i))",
      "description": "Measures how similar a point is to its own cluster vs other clusters",
      "range": "[-1, 1]",
      "interpretation": "Higher is better. Values > 0.7 are excellent, > 0.5 are good",
      "result_interpretation": "Excellent separation"
    },
    "davies_bouldin_index": {
      "value": 0.1145,
      "formula": "DB = (1/k) \u03a3 max\u2c7c\u2260\u1d62((\u03c3\u1d62 + \u03c3\u2c7c) / d(c\u1d62, c\u2c7c))",
      "description": "Ratio of within-cluster to between-cluster distances",
      "interpretation": "Lower is better. Values closer to 0 indicate better separation"
    }
  },
  "cluster_distribution": {
    "0": {
      "count": 1893,
      "percentage": 63.1
    },
    "1": {
      "count": 1107,
      "percentage": 36.9
    }
  },
  "formulas": {
    "standard_scaling": "z = (x - \u03bc) / \u03c3",
    "euclidean_distance": "d = \u221a(\u03a3(x\u1d62 - y\u1d62)\u00b2)",
    "cosine_similarity": "cos(\u03b8) = (A\u00b7B) / (||A|| ||B||)",
    "silhouette_score": "s(i) = (b(i) - a(i)) / max(a(i), b(i))",
    "davies_bouldin_index": "DB = (1/k) \u03a3 max\u2c7c\u2260\u1d62((\u03c3\u1d62 + \u03c3\u2c7c) / d(c\u1d62, c\u2c7c))",
    "kmeans_objective": "minimize \u03a3\u2c7c \u03a3\u1d62\u2208C\u2c7c ||x\u1d62 - \u03bc\u2c7c||\u00b2"
  },
  "visualization": {
    "method": "Separate 2D UMAP projection for scatter plots",
    "coordinates": "X and Y represent 2D embedding of 22-dimensional patient data",
    "coloring": "Color-coded by cluster assignment"
  },
  "prediction_pipeline": [
    "Apply same preprocessing (encoding, imputation, scaling)",
    "Transform through trained UMAP model",
    "Assign to nearest cluster centroid via KMeans",
    "Project to 2D for visualization"
  ]
}